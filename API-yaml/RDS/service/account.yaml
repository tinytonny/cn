swagger: "2.0"                                  # 基于Swagger 2.0版本实现
info:
  version: v1
  title: 账号管理
  description: API related to Relational Database Service

basePath: /regions/{regionId}

paths:
  "/instances/{instanceId}/accounts":    #数据库账户
    get:
      description: 查看某个RDS实例下所有账号信息，包括账号名称、对各个数据库的访问权限信息等
      operationId: describeAccounts
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: ../model/Account.yaml#/definitions/Account
    post:
      description: 创建数据库账号，用户可以使用客户端，应用程序等通过该账号和密码登录RDS数据库实例。<br>为便于管理和恢复，RDS对账号进行了限制，数据库账号只能通过控制台或者OpenAPI进行创建、删除账号以及对账号授权等，用户不能通过SQL语句对账号进行相关操作。
      operationId: createAccount
      parameters:
        - name: createAccount
          in: body
          description:
          schema:
            type: object
            required:
              - accountName
              - accountPassword
            properties:
              accountName:
                type: string
                description: 账号名，在同一个RDS实例中，账号名不能重复。账号名的具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
              accountPassword:
                type: string
                description: 密码,密码的具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}":    #数据库账户
    delete:
      description: 删除数据库账号，账号删除后不可恢复，用户无法再使用该账号登录RDS实例
      operationId: deleteAccount
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}:grantPrivilege":    #数据库账号授权
    post:
      description: 授予账号的数据库访问权限，即该账号对数据库拥有什么权限。一个账号可以对多个数据库具有访问权限。<br>为便于管理，RDS对权限进行了归类，目前提供以下两种权限<br>- ro：只读权限，用户只能读取数据库中的数据，不能进行创建、插入、删除、更改等操作。<br>- rw：读写权限，用户可以对数据库进行增删改查等操作
      operationId: grantPrivilege
      parameters:
        - name: accountPrivileges
          required: true
          in: body
          description: 账号的访问权限
          schema:
            type: array
            items:
              $ref: "../model/AccountPrivilege.yaml#/definitions/AccountPrivilege"
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}:revokePrivilege":    #数据库账号授权
    post:
      description: 取消该账号对某个数据库的所有权限。权限取消后，该账号将不能访问此数据库。取消账号对某个数据库的访问权限，不影响该账号对其他数据库的访问权限<br>- 仅支持MySQL
      operationId: revokePrivilege
      parameters:
        - name: dbNames
          required: true
          in: query
          type: array
          description: 需要取消授权的数据库的名称。权限取消后，该账号将不能访问此数据库
          items:
            type: string
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}:resetPassword":    #数据库账号重置密码
    post:
      description: 重置数据库账号密码。如果用户忘记账号的密码，可以使用该接口重置指定账号密码。密码重置后，以前的密码将无法使用，必须使用重置后的新密码登录或连接数据库实例。
      operationId: resetPassword
      parameters:
        - name: accountPassword
          in: body
          description: 新密码
          schema:
            type: object
            required:
              - accountPassword
            properties:
              accountPassword:
                type: string
                description: 新密码，密码的具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
      responses:
        200:
          description: OK
#路径通用参数
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)
  instanceId:
    name: instanceId
    in: path
    required: true
    type: string
    description: RDS 实例ID，唯一标识一个RDS实例
  accountName:
    name: accountName
    in: path
    required: true
    type: string
    description: 账号名，在同一个实例中账号名不能重复



